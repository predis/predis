name: Tests

on:
  push:
    branches:
      - main
      - v2.**
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  predis:
    name: PHP ${{ matrix.php }} (Redis ${{ matrix.redis }})
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        php:
          - '7.2'
          - '7.3'
          - '7.4'
          - '8.0'
          - '8.1'
          - '8.2'
        redis:
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'

    services:
      redis:
        image: redis:${{ matrix.redis }}
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3
        ports:
          - 6379:6379

    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup PHP with Composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: ${{ (matrix.php == '8.1' && matrix.redis == '7') && 'xdebug' || 'none' }}

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "directory=$(composer config cache-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.directory }}
          key: tests-php-${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: tests-php-${{ matrix.php }}-composer

      - name: Install Composer dependencies
        run: composer install --ansi --no-progress --prefer-dist ${{ matrix.php == '8.0' && '--ignore-platform-reqs' || '' }}

      - name: Run PHPUnit tests
        run: vendor/bin/phpunit

      - name: Send coverage to Coveralls
        env:
            COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ env.COVERALLS_REPO_TOKEN && matrix.php == '8.1' && matrix.redis == '7' }}
        run: |
          wget "https://github.com/php-coveralls/php-coveralls/releases/download/v2.5.3/php-coveralls.phar"
          php ./php-coveralls.phar -v
